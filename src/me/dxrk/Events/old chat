package me.jpriani13.epsilonPvP.Events;

import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Random;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.inventory.InventoryType;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import me.jpriani13.epsilonPvP.Main;
import me.jpriani13.epsilonPvP.SettingsManager;
import me.jpriani13.gangs.Methods;
import me.jpriani13.rankup.bukkit.CodRanks;
import me.jpriani13.rankup.util.Config;
import mkremins.fanciful.FancyMessage;

public class Chat implements Listener, CommandExecutor {

	SettingsManager settings = SettingsManager.getInstance();
	public static boolean isMuted = false;


	Methods gang = me.jpriani13.gangs.Methods.getInstance();

	public boolean getOption(Player p, String s) {
		if (settings.getData().contains(p.getUniqueId().toString() + ".Chat." + s) == false) {
			settings.getData().set(p.getUniqueId().toString() + ".Chat." + s, 0);
			settings.saveData();
		}
		if (settings.getData().getInt(p.getUniqueId().toString() + ".Chat." + s) == 0) return true;
		return false;
	}
	
	public String getChatColor(Player p) {
		String s = settings.getcolor().getString(p.getName() + ".Color");
		return s;
	}
	
	public void openColorInv(Player p) {
		Inventory i = Bukkit.createInventory(null, 9*2, net.md_5.bungee.api.ChatColor.AQUA + "Chat Color");
		i.setItem(3, glassSlide(7, "&7Grey"));
		i.setItem(4, glassSlide(0, "&7White"));
		i.setItem(5, glassSlide(9, "&3Dark Aqua"));
		i.setItem(11, glassSlide(11, "&1Hero"));
		i.setItem(12, glassSlide(5, "&aInfused"));
		i.setItem(13, glassSlide(10, "&5Mythic"));
		i.setItem(14, glassSlide(2, "&dA&7n&dg&7e&dl&7i&dc"));
		i.setItem(15, glassSlide(3, "&bE&fp&bs&fi&bl&fo&bn"));
		p.openInventory(i);
	}
	
	public void setChatColor(Player p, String color) {
		settings.getcolor().set(p.getName() + ".Color", color);
		settings.savecolorFile();
	}
	
	
	private ItemStack glassSlide(int color, String name) {
		ItemStack i = new ItemStack(Material.STAINED_GLASS_PANE, 1, (short)color);
		ItemMeta im = i.getItemMeta();
		im.setDisplayName(ChatColor.translateAlternateColorCodes('&', name));
		i.setItemMeta(im);
		return i;
	}
	
	@EventHandler
	public void onClick(InventoryClickEvent e) {
		if (e.getInventory().getName().equals(ChatColor.AQUA + "Chat Color")) {
			e.setCancelled(true);
			Player p = (Player)e.getWhoClicked();
			if (e.getRawSlot() == 0) setChatColor(p, null);
			if (e.getRawSlot() == 3) setChatColor(p, "Grey");
			if (e.getRawSlot() == 4) {
				if (p.hasPermission("ChatColor.White") == false) {
					p.sendMessage(ChatColor.RED + "You do not have this chat color.");
					return;
				}
				setChatColor(p, "White");
			}
			if (e.getRawSlot() == 5) {
				if (p.hasPermission("ChatColor.DarkAqua") == false) {
					p.sendMessage(ChatColor.RED + "You do not have this chat color.");
					return;
				}
				setChatColor(p, "DarkAqua");
			}
			if (e.getRawSlot() == 11) {
				if (p.hasPermission("Rank.Hero") == false) {
					p.sendMessage(ChatColor.RED + "You do not have this chat color.");
					return;
				}
				setChatColor(p, "Hero");
			}
			if (e.getRawSlot() == 12) {
				if (p.hasPermission("Rank.Infused") == false) {
					p.sendMessage(ChatColor.RED + "You do not have this chat color.");
					return;
				}
				setChatColor(p, "Infused");
			}
			if (e.getRawSlot() == 13) {
				if (p.hasPermission("Rank.Mythic") == false) {
					p.sendMessage(ChatColor.RED + "You do not have this chat color.");
					return;
				}
				setChatColor(p, "Mythic");
			}
			if (e.getRawSlot() == 14) {
				if (p.hasPermission("Rank.Angelic") == false) {
					p.sendMessage(ChatColor.RED + "You do not have this chat color.");
					return;
				}
				setChatColor(p, "Angelic");
			}
			if (e.getRawSlot() == 15) {
				if (p.hasPermission("Rank.Epsilon") == false) {
					p.sendMessage(ChatColor.RED + "You do not have this chat color.");
					return;
				}
				setChatColor(p, "Epsilon");
			}
			p.closeInventory();
			p.sendMessage(net.md_5.bungee.api.ChatColor.GREEN + "Chat color changed.");
			
		}
	}
	
	public String rainbowText(String s) {
		String result = "";
		int i = 0;
		for(Character c : s.toCharArray()) {
			if(Character.isSpaceChar(c)) {
				result = result + c;
			} else {
				if(i == 0) {
					result = result + "&a&l" + c;
					i=1;
				}
				else if(i == 1) {
					result = result + "&b&l" + c;
					i=2;
				}
				else if(i == 2) {
					result = result + "&c&l" + c;
					i=3;
				}
				else if(i == 3) {
					result = result + "&d&l" + c;
					i=4;
				}
				else if(i == 4) {
					result = result + "&e&l" + c;
					i=5;
				}
				else {
					result = result + "&f&l" + c;
					i=0;
				}
			}
		}
		return ChatColor.translateAlternateColorCodes('&', result);
	}
	
	public void switchOption(Player p, String s) {
		if (getOption(p, s) == true) {
			settings.getData().set(p.getUniqueId().toString() + ".Chat." + s, 1);
			settings.saveData();
		}else{
			settings.getData().set(p.getUniqueId().toString() + ".Chat." + s, 0);
			settings.saveData();
		}
	}
	public ChatColor randomColor() {
		Random r = new Random();
		int color = r.nextInt(6);
		switch(color) {
		case(0):
			return ChatColor.AQUA;
		case(1):
			return ChatColor.GREEN;
		case(2):
			return ChatColor.LIGHT_PURPLE;
		case(3):
			return ChatColor.YELLOW;
		case(4):
			return ChatColor.RED;
		}
		return ChatColor.WHITE;
	}
	
	public ItemStack optionItem(String name, boolean on) {
		ItemStack i = new ItemStack(Material.INK_SACK, 1);
		ItemMeta im = i.getItemMeta();
		im.setDisplayName(ChatColor.AQUA + name);
		List<String> lore = new ArrayList<String>();
		lore.add("");
		if (on == true) {
			lore.add(ChatColor.GRAY + "Click to toggle off!");
			i.setDurability((short)10);
		}else{
			lore.add(ChatColor.GRAY + "Click to toggle on!");
			i.setDurability((short)8);
		}
		im.setLore(lore);
		i.setItemMeta(im);
		return i;
	}
	
	public void openToggleOptions(Player p) {
		Inventory i = Bukkit.createInventory(null, InventoryType.HOPPER, ChatColor.AQUA + "Chat Options");
		i.setItem(0, optionItem("Prestige", getOption(p, "Prestige")));
		i.setItem(1, optionItem("Rank", getOption(p, "Rank")));
		i.setItem(2, optionItem("Nickname", getOption(p, "Nickname")));
		i.setItem(3, optionItem("Donor", getOption(p, "Donor")));
		i.setItem(4, optionItem("Tag", getOption(p, "Tag")));
		p.openInventory(i);
	}
	
	@EventHandler
	public void onClick1(InventoryClickEvent e) {
		if (e.getInventory().getName().equals(ChatColor.AQUA + "Chat Options")) {
			e.setCancelled(true);
			Player p = (Player)e.getWhoClicked();
			if (e.getRawSlot() == 0) switchOption(p, "Prestige");
			if (e.getRawSlot() == 1) switchOption(p, "Rank");
			if (e.getRawSlot() == 2) switchOption(p, "Nickname");
			if (e.getRawSlot() == 3) switchOption(p, "Donor");
			if (e.getRawSlot() == 4) switchOption(p, "Tag");
			openToggleOptions(p);
		}
	}
	
	public HashMap<Player, Long> waiting = new HashMap<Player, Long>();
	CodRanks codranks = CodRanks.getInstance();
	public String getRankPrefix(Player p) {
		if (codranks.isCodRanks(p)) {
			ChatColor c = randomColor();
			if(p.getName().equals("Nightxx")) {
				return "";
			}
			return ChatColor.translateAlternateColorCodes('&' , "&8&l[" + c + "&ki" + randomColor() + codranks.getRank(p) + c + "&ki&8&l]");
		}
		String rank = Config.getRank(p);
		if (rank.equalsIgnoreCase("A")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&a" + rank + "&8]");
		if (rank.equalsIgnoreCase("B")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&1" + rank + "&8]");
		if (rank.equalsIgnoreCase("C")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&2" + rank + "&8]");
		if (rank.equalsIgnoreCase("D")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&3" + rank + "&8]");
		if (rank.equalsIgnoreCase("E")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&4" + rank + "&8]");
		if (rank.equalsIgnoreCase("F")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&5" + rank + "&8]");
		if (rank.equalsIgnoreCase("G")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&6" + rank + "&8]");
		if (rank.equalsIgnoreCase("H")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&7" + rank + "&8]");
		if (rank.equalsIgnoreCase("I")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&8" + rank + "&8]");
		if (rank.equalsIgnoreCase("J")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&9" + rank + "&8]");
		if (rank.equalsIgnoreCase("K")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&b" + rank + "&8]");
		if (rank.equalsIgnoreCase("L")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&c" + rank + "&8]");
		if (rank.equalsIgnoreCase("M")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&d" + rank + "&8]");
		if (rank.equalsIgnoreCase("N")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&e" + rank + "&8]");
		if (rank.equalsIgnoreCase("O")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&f" + rank + "&8]");
		if (rank.equalsIgnoreCase("P")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&a" + rank + "&8]");
		if (rank.equalsIgnoreCase("Q")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&1" + rank + "&8]");
		if (rank.equalsIgnoreCase("R")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&2" + rank + "&8]");
		if (rank.equalsIgnoreCase("S")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&3" + rank + "&8]");
		if (rank.equalsIgnoreCase("T")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&4" + rank + "&8]");
		if (rank.equalsIgnoreCase("U")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&5" + rank + "&8]");
		if (rank.equalsIgnoreCase("V")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&6" + rank + "&8]");
		if (rank.equalsIgnoreCase("W")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&7" + rank + "&8]");
		if (rank.equalsIgnoreCase("X")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&8" + rank + "&8]");
		if (rank.equalsIgnoreCase("Y")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&c&ki&4" + rank + "&c&ki&8]");
		if (rank.equalsIgnoreCase("Z")) return ChatColor.translateAlternateColorCodes('&', "&8[" + "&b&ki&2" + rank + "&b&ki&8]");
		if (rank.equalsIgnoreCase("Free")) return ChatColor.translateAlternateColorCodes('&', "&b[&f&ki&a&lFREE&f&ki&b]");
		return "";
	}
	
	public String prestige(int i) {
		if (i == 1) return ChatColor.translateAlternateColorCodes('&', "&a" + "☢");
		if (i == 2) return ChatColor.translateAlternateColorCodes('&', "&b" + "❈");
		if (i == 3) return ChatColor.translateAlternateColorCodes('&', "&c" + "❆");
		if (i == 4) return ChatColor.translateAlternateColorCodes('&', "&d" + "❉");
		if (i == 5) return ChatColor.translateAlternateColorCodes('&', "&e" + "✲");
		if (i == 6) return ChatColor.translateAlternateColorCodes('&', "&6" + "✦");
		if (i == 7) return ChatColor.translateAlternateColorCodes('&', "&5" + "✪");
		if (i == 8) return ChatColor.translateAlternateColorCodes('&', "&4" + "☠");
		if (i == 9) return ChatColor.translateAlternateColorCodes('&', "&3" + "❂");
		if (i == 10) return ChatColor.translateAlternateColorCodes('&', "&b" + "✯");
		return "";
	}
	

	public String prefix(Player p)  {
		String rank = null;
		if (p.getName().equalsIgnoreCase("jpriani13")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&f&l&ki&4✞&f&l&ki&4&lOwner&f&l&ki&4✞&f&l&ki&r");
		}
		else if (p.getName().equalsIgnoreCase("Nightxx")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&5&ki&d&l✠&5&ki&d&lCo-Owner&5&ki&d&l✠&5&ki&r ");
		}
		else if (p.hasPermission("Rank.Admin")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&c&k&l;&4&lAdmin&c&k&l;");
		}
		else if (p.hasPermission("Rank.Mod") ||  p.hasPermission("Rank.Trainee")||  p.hasPermission("Rank.EventManager") ||  p.hasPermission("Rank.Ideaman") ||  p.hasPermission("Rank.Builder")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&6&l&ki&e&lStaff&6&l&ki");
		}
		/**
		else if (p.hasPermission("Rank.HeadMod")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&b&k&l;;&4&lHead Mod&b&k&l;;&f");
		}
		else if (p.hasPermission("Rank.Slave")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&7&k;&fSlave&7&k;&r ");
		}
		else if (p.hasPermission("Rank.Mod")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&1&k&l;&b&lMod&1&k&l;");
		}
		else if (p.hasPermission("rank.builder")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&a&l&ki&2&lBuilder&a&l&ki");
		}
		else if (p.hasPermission("Rank.trainee")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&6&k&l;&e&lTrainee&6&k&l;");
		}*/
		else if (p.hasPermission("Rank.Youtube")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&4&l&kiYou&f&ltube&4&l&ki");
		}
		else if (p.hasPermission("Rank.Overlord")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&8&l&ki&c&l⎈&8&k&li&4&lOver Lord&8&l&ki&c&l⎈&8&l&ki");
		}
		else if (p.hasPermission("Rank.Epsilon")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&5&ki&d&lEp&b&lsil&d&lon&5&ki&r ");
		}
		else if (p.hasPermission("Rank.Angelic")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&d&ki&5&ki&b&lAn&5&lgel&b&lic&5&ki&d&ki");
		}
		else if (p.hasPermission("Rank.Mythic")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&5&l&ki&d&l&ki&5&lMythic&d&l&ki&5&l&kii");
		}
		else if (p.hasPermission("Rank.Infused")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&6&l&ki&c&lInfu&a&lsed&6&l&ki");
		}
		else if (p.hasPermission("Rank.Legend")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&8[&fLegend&8]");
		}
		else if (p.hasPermission("Rank.Hero")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&8[&9Hero&8]");
		}
		else if (p.hasPermission("Rank.Champion")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&8[&6Champion&8]");
		}
		else if (p.hasPermission("Rank.Forbidden")) {
			rank = ChatColor.translateAlternateColorCodes('&', "&8[&4Forbidden&8]");
		}
		return rank;
	}

	public String format(double amt)
	{
		if (amt >= 1000000000000.0D) {
			return String.format("%.1f Tril", new Object[] { Double.valueOf(amt / 1000000000000.0D) });
		}
		if (amt >= 1000000000.0D) {
			return String.format("%.1f Bil", new Object[] { Double.valueOf(amt / 1000000000.0D) });
		}
		if (amt >= 1000000.0D) {
			return String.format("%.1f Mil", new Object[] { Double.valueOf(amt / 1000000.0D) });
		}
		return NumberFormat.getNumberInstance(Locale.US).format(amt);
	}

	public ItemStack getHover(Player p) {
		ItemStack i = new ItemStack(Material.PAPER, 1);
		ItemMeta im = i.getItemMeta();
		im.setDisplayName(ChatColor.translateAlternateColorCodes('&', "&fReal Name &7» " + p.getName()));
		List<String> lore = new ArrayList<String>();
		lore.add(ChatColor.translateAlternateColorCodes('&', "&fPrison Rank &7» " + this.getRankPrefix(p)));
		if (this.prefix(p) != null) {
			lore.add(ChatColor.translateAlternateColorCodes('&', "&fDonor Rank &7» " + this.prefix(p)));
		}else{
			lore.add(ChatColor.translateAlternateColorCodes('&', "&fDonor Rank &7» "));
		}
		lore.add(ChatColor.translateAlternateColorCodes('&', "&fPrestige &7» " + "&8[&9P&8-&" + (r.nextInt(9) + 1) + "&l" + Config.getPrestige(p) + "&8] "));
		if (gang.getGang(p) != null) {
			lore.add(ChatColor.translateAlternateColorCodes('&', "&fGang &7» &8[" + gang.getGang(p)  + "&8] &7(&b" + gang.getTag(gang.getGang(p)) + "&7)" ));
		}else{
			lore.add(ChatColor.translateAlternateColorCodes('&', "&fGang &7» "));
		}
		lore.add(ChatColor.translateAlternateColorCodes('&', "&fBalance &7» " + "&8[&a" + format(Main.econ.getBalance(p)) + "&8] "));
		lore.add(ChatColor.translateAlternateColorCodes('&', "&fTokens &7» " + "&8[&b" + me.jpriani13.epsilonPvP.Enchanttokens.Tokens.getInstance().getTokens(p) + "&8] "));
		lore.add(ChatColor.translateAlternateColorCodes('&', "&fBlocks Mined: &7» " + "&8[&b" + settings.getBlocks().getInt(p.getName())/2 + "&8] "));
		lore.add("");
		lore.add(ChatColor.translateAlternateColorCodes('&', "&7Click to visit plot"));
		im.setLore(lore);
		i.setItemMeta(im);
		return i;
	}

	public static ArrayList<Player> ac = new ArrayList<Player>();

	public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args)
	{
		if (cmd.getName().equalsIgnoreCase("MuteChat")) {
			if (!(sender.hasPermission("Chat.Mute"))) return false;
			if (isMuted == false) {
				isMuted = true;
				Bukkit.broadcastMessage(ChatColor.GRAY + "" + ChatColor.BOLD + sender.getName() + " has muted chat!");
			}else{
				isMuted = false;
				Bukkit.broadcastMessage(ChatColor.GRAY + "" + ChatColor.BOLD + sender.getName() + " has unmuted chat!");

			}

		}
		if (cmd.getName().equalsIgnoreCase("Chat")) {
			if (sender instanceof Player) {
				Player p = (Player)sender;
			this.openToggleOptions(p);
			}
		}
		if (cmd.getName().equalsIgnoreCase("ChatColor")) {
			Player p = (Player)sender;
			this.openColorInv(p);
		}

		if (cmd.getName().equalsIgnoreCase("Ac")) {
			if (!(sender instanceof Player)) return false;
			Player p = (Player)sender;
			if (!(sender.hasPermission("Epsilon.AdminChat"))) return false;

			if (args.length == 0) {	
				if (ac.contains(p)) {
					p.sendMessage(ChatColor.RED + "Admin Chat Off");
					ac.remove(p);
					return false;
				}
				else {
					p.sendMessage(ChatColor.RED + "Admin Chat On");
					ac.add(p);
					return false;
				}
			}else{
				StringBuilder sb = new StringBuilder();

				if ( (!p.getName().equals("jpriani13") && (!p.getName().equals("anamericandude")) && (!p.getName().equals("Nightxx"))) ) {
					sb.append(ChatColor.DARK_RED + "" + ChatColor.BOLD + "«" + ChatColor.DARK_RED + "Jps Bitches" + ChatColor.BOLD + "» " + ChatColor.RED + p.getName() + ChatColor.DARK_GRAY + "" + ChatColor.BOLD + " : " + ChatColor.YELLOW);
				} 
				else if (p.getName().equals("anamericandude")){
					sb.append(ChatColor.DARK_RED + "" + ChatColor.BOLD + "«" + ChatColor.DARK_RED + "Jps Main Bitch" + ChatColor.BOLD + "» " + ChatColor.RED + p.getName() + ChatColor.DARK_GRAY + "" + ChatColor.BOLD + " : " + ChatColor.YELLOW);
				}
				else if(p.getName().equals("Nightxx")) {
					sb.append(ChatColor.DARK_RED + "" + ChatColor.BOLD + "«" + ChatColor.DARK_RED + "Jps Thicc Bitch" + ChatColor.BOLD + "» " + ChatColor.RED + p.getName() + ChatColor.DARK_GRAY + "" + ChatColor.BOLD + " : " + ChatColor.YELLOW);
				}else {
					sb.append(ChatColor.DARK_RED + "" + ChatColor.BOLD + "«" + ChatColor.DARK_RED + "JP" + ChatColor.BOLD + "» " + ChatColor.RED + p.getName() + ChatColor.DARK_GRAY + "" + ChatColor.BOLD + " : " + ChatColor.YELLOW);
				}
				for (int x = 0; x < args.length; x++) {
					sb.append(args[x] + " ");
				}
				Bukkit.broadcast(sb.toString(), "Epsilon.Adminchat");
			}
		}
		return false;
	}
	
	
	Random r = new Random();
	
	public ChatColor rainbowColor() {
		int x = r.nextInt(5);
		if (x == 0) return ChatColor.AQUA;
		if (x ==1) return ChatColor.GREEN;
		if (x == 2) return ChatColor.RED;
		if (x==3) return ChatColor.YELLOW;
		return ChatColor.WHITE;
	}

	@SuppressWarnings("static-access")
	@EventHandler
	public void NameHover(AsyncPlayerChatEvent event) { 
		Player p = event.getPlayer();
		if (event.isCancelled()) return;
		if (isMuted == true) {
			if (p.hasPermission("A") == false){ event.setCancelled(true);
			return;
			}
		}
		if (ac.contains(p)) {
			if ( (!p.getName().equals("jpriani13") && (!p.getName().equals("anamericandude")) && (!p.getName().equals("Nightxx"))) ) {
				String adminchat = ChatColor.DARK_RED + "" + ChatColor.BOLD + "«" + ChatColor.DARK_RED + "Jps Bitches" + ChatColor.BOLD + "» " + ChatColor.RED + p.getName() + ChatColor.DARK_GRAY + "" + ChatColor.BOLD + " : " + ChatColor.YELLOW + event.getMessage();
				Bukkit.broadcast(adminchat, "Epsilon.Adminchat");
			} 
			else if (p.getName().equals("anamericandude")){
				String adminchat = ChatColor.DARK_RED + "" + ChatColor.BOLD + "«" + ChatColor.DARK_RED + "Jps Main Bitch" + ChatColor.BOLD + "» " + ChatColor.RED + p.getName() + ChatColor.DARK_GRAY + "" + ChatColor.BOLD + " : " + ChatColor.YELLOW + event.getMessage();
				Bukkit.broadcast(adminchat, "Epsilon.Adminchat");
			}
			else if(p.getName().equals("Nightxx")) {
				String adminchat = ChatColor.DARK_RED + "" + ChatColor.BOLD + "«" + ChatColor.DARK_RED + "Jps Thicc Bitch" + ChatColor.BOLD + "» " + ChatColor.RED + p.getName() + ChatColor.DARK_GRAY + "" + ChatColor.BOLD + " : " + ChatColor.YELLOW + event.getMessage();
				Bukkit.broadcast(adminchat, "Epsilon.Adminchat");
			}else{
				String adminchat = ChatColor.DARK_RED + "" + ChatColor.BOLD + "«" + ChatColor.DARK_RED + "JP" + ChatColor.BOLD + "» " + ChatColor.RED + p.getName() + ChatColor.DARK_GRAY + "" + ChatColor.BOLD + " : " + ChatColor.YELLOW + event.getMessage();
				Bukkit.broadcast(adminchat, "Epsilon.Adminchat");
			}
			event.setCancelled(true);
			return;

		}
		
		if(event.getMessage().contains("@")) {
			for(Player pp : Bukkit.getOnlinePlayers()) {
				if(event.getMessage().contains("@" + pp.getName())) {
					pp.playSound(pp.getLocation(), Sound.CLICK, 1, 1);
				}
			}
		}

		if (!(p.hasPermission("Rank.champion"))) {	
			if (waiting.containsKey(event.getPlayer())) {

				long time = waiting.get(event.getPlayer());

				long currentime = new Date().getTime();

				long ms = 1000;

				if (currentime > (time + ms)) {
					waiting.remove(event.getPlayer());
					waiting.put(event.getPlayer(), new Date().getTime());
				}
				else{
					long msrem = (time + ms) - currentime;
					String cooldownmsg = ChatColor.translateAlternateColorCodes('&', "&7Please wait &c" + String.valueOf(msrem) + " ms &7till you send another message.");
					String donormsg = ChatColor.translateAlternateColorCodes('&', "&bChampion Rank &7and higher can bypass this wait.");
					event.getPlayer().sendMessage(cooldownmsg);
					event.getPlayer().sendMessage(donormsg);
					event.setCancelled(true);
					return;
				}


			}
			else{
				waiting.put(event.getPlayer(), new Date().getTime());
			}

		}


		event.setCancelled(true);

		String prestige = null;

		if (Config.getPrestige(p) > 0) {
			if (me.jpriani13.rankup.bukkit.CodRanks.getInstance().isCodRanks(p) == false) {
			prestige = ChatColor.translateAlternateColorCodes('&', "&d[" +  this.prestige(Config.getPrestige(p)) + "&d]");
			}
		}
		
		String rank = ChatColor.translateAlternateColorCodes('&' , this.getRankPrefix(p));

		if (p.hasPermission("Chat.RankOff")) {
			rank = "";
		}
		
		String prefix = this.prefix(p);

		String name;

		if(settings.getcolor().getString(p.getName() + ".Nickname") == null) {
			name = ChatColor.GRAY + p.getName();
		} else {
			name = ChatColor.translateAlternateColorCodes('&', settings.getcolor().getString(p.getName() + ".Nickname"));
		}

		String suffix = null;

		if (settings.getData().contains(p.getUniqueId().toString() + ".Tag")) {
			suffix = ChatColor.translateAlternateColorCodes('&', settings.getData().getString(p.getUniqueId().toString() + ".Tag"));
		}


		
		String msg = event.getMessage();
		int caps = 0;
		for(Character c : msg.toCharArray()) {
			if(c.isUpperCase(c)) {
				caps = caps+1;
			}
		}
		String s;
		if(caps > 3 && p.isOp() == false) {
			s = event.getMessage().toLowerCase();
		} else {
			s = event.getMessage();
		}
		
		



		
		for (Player ps : event.getRecipients()) {
			FancyMessage chatFormat = new FancyMessage("");
			StringBuilder firstpart = new StringBuilder();
			if (prestige != null) {
			if (getOption(ps, "Prestige") == true) firstpart.append(prestige);
			}
			if (getOption(ps, "Rank") == true) firstpart.append(rank);
			if (this.prefix(p) != null) {
				if (getOption(ps, "Donor") == true) firstpart.append(prefix);
			}
			if (getOption(ps, "Nickname") == false) {
				firstpart.append(ChatColor.GRAY + p.getName());
			}else{
			firstpart.append(name);
			}
			
			if (suffix != null) {
				if (getOption(ps, "Tag") == true) firstpart.append(suffix);
			}

			String First = firstpart.toString();

			chatFormat.then(First).itemTooltip(getHover(p)).suggest("/plot h " + p.getName());

			chatFormat.then(ChatColor.translateAlternateColorCodes('&', " &8» "));

			
			if (p.hasPermission("Epsilon.ChatColor")) {
				if (this.getChatColor(p) != null) {
					if (this.getChatColor(p).equals("Angelic")) {
						boolean w = false;
						StringBuilder sb = new StringBuilder();
						for (char ss : s.toCharArray()) {
							if (w == false) {
								sb.append(ChatColor.LIGHT_PURPLE + "" +  ss);
								w = true;
						}else{
							sb.append(ChatColor.GRAY + "" +  ss);
							w = false;
						}
				}
						chatFormat.then(sb.toString());
				}else if(this.getChatColor(p).equals("Epsilon")) {
					boolean w = false;
					StringBuilder sb = new StringBuilder();
					for (char ss : s.toCharArray()) {
						if (w == false) {
							sb.append(ChatColor.AQUA + "" +  ss);
							w = true;
					}else{
						sb.append(ChatColor.WHITE + "" +  ss);
						w = false;
					}
				}
					chatFormat.then(sb.toString());
				}
				else{
					chatFormat.then(ChatColor.translateAlternateColorCodes('&', s));
				}
				}else{
					if(p.getName().equalsIgnoreCase("nightxx") || p.getName().equalsIgnoreCase("jpriani13")) {
						StringBuilder sb = new StringBuilder();
						for (char ss : s.toCharArray()) {
								sb.append(this.rainbowColor() + "" + ChatColor.BOLD +  ss);
					}
						chatFormat.then(sb.toString());
					}else{
					chatFormat.then(ChatColor.translateAlternateColorCodes('&', s));
					}
				}
				if (p.hasPermission("Rank.Owner")) chatFormat.color(ChatColor.DARK_RED);
				else if(p.getName().equalsIgnoreCase("NightXD")) chatFormat.color(ChatColor.DARK_RED).style(ChatColor.BOLD);
				else if (p.hasPermission("Rank.Admin")) chatFormat.color(ChatColor.RED).style(ChatColor.BOLD);
				else if (p.hasPermission("Rank.MOD")) chatFormat.color(ChatColor.GOLD);
				else if (p.hasPermission("Rank.Helper")) chatFormat.color(ChatColor.YELLOW);
				else {
					if (this.getChatColor(p) == null || this.getChatColor(p).equals("Grey")) chatFormat.color(ChatColor.GRAY);
					else if (this.getChatColor(p).equals("White")) chatFormat.color(ChatColor.WHITE);
					else if (this.getChatColor(p).equals("DarkAqua")) chatFormat.color(ChatColor.DARK_AQUA);
					else if (this.getChatColor(p).equals("Hero")) chatFormat.color(ChatColor.DARK_BLUE);
					else if (this.getChatColor(p).equals("Infused")) chatFormat.color(ChatColor.GREEN);
					else if (this.getChatColor(p).equals("Mythic")) chatFormat.color(ChatColor.DARK_PURPLE);
					}
			}else{
				
				if (this.getChatColor(p) != null) {
					if (this.getChatColor(p).equals("Angelic")) {
						boolean w = false;
						StringBuilder sb = new StringBuilder();
						for (char ss : s.toCharArray()) {
							if (w == false) {
								sb.append(ChatColor.LIGHT_PURPLE + "" +  ss);
								w = true;
						}else{
							sb.append(ChatColor.GRAY + "" +  ss);
							w = false;
						}
				}
						chatFormat.then(sb.toString());
				}else if(this.getChatColor(p).equals("Epsilon")) {
					boolean w = false;
					StringBuilder sb = new StringBuilder();
					for (char ss : s.toCharArray()) {
						if (w == false) {
							sb.append(ChatColor.AQUA + "" +  ss);
							w = true;
					}else{
						sb.append(ChatColor.WHITE + "" +  ss);
						w = false;
					}
				}
					chatFormat.then(sb.toString());
				
				}else{
					chatFormat.then(s);
				}
				}else{
					chatFormat.then(s);
				}
				if (p.hasPermission("Rank.Owner")) chatFormat.color(ChatColor.DARK_RED);
				else if(p.getName().equalsIgnoreCase("NightXD")) chatFormat.color(ChatColor.DARK_RED).style(ChatColor.BOLD);
				else if (p.hasPermission("Rank.Admin")) chatFormat.color(ChatColor.RED).style(ChatColor.BOLD);
				else if (p.hasPermission("Rank.MOD")) chatFormat.color(ChatColor.GOLD);
				else if (p.hasPermission("Rank.Helper")) chatFormat.color(ChatColor.YELLOW);
				else {
					if (this.getChatColor(p) == null || this.getChatColor(p).equals("Grey")) chatFormat.color(ChatColor.GRAY);
					else if (this.getChatColor(p).equals("White")) chatFormat.color(ChatColor.WHITE);
					else if (this.getChatColor(p).equals("DarkAqua")) chatFormat.color(ChatColor.DARK_AQUA);
					else if (this.getChatColor(p).equals("Hero")) chatFormat.color(ChatColor.DARK_BLUE);
					else if (this.getChatColor(p).equals("Infused")) chatFormat.color(ChatColor.GREEN);
					else if (this.getChatColor(p).equals("Mythic")) chatFormat.color(ChatColor.DARK_PURPLE);
					}
			}
			if (ChatColor.stripColor(s).toLowerCase().contains("[item]") && p.getItemInHand() != null && p.getItemInHand().getType() != Material.AIR) {  
				chatFormat.itemTooltip(p.getItemInHand());
			}
			
			
			chatFormat.send(ps);   
		}

	}

}
